<?xml version="1.0"?>

<custom-sql>

    <!-- Finds all users in the database and joins them with settings table -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.findAllUsers">
        <![CDATA[
			SELECT
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			WHERE
				User_.userId != ?
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Search all users in the database and joins them with settings table -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.searchAllUsers">
        <![CDATA[
			SELECT
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			WHERE
				User_.userId != ?
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
				AND
				(
					(lower(User_.firstName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.middleName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.lastName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.screenName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.emailAddress) LIKE ? [$AND_OR_NULL_CHECK$])
				)
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Finds all users and attaches groups to them -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.findBySitesGroups">
        <![CDATA[
			SELECT DISTINCT
			    Group_.name AS groupName,
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			INNER JOIN
				Users_Groups ON (Users_Groups.userId = User_.userId)
			INNER JOIN
			    Group_ ON (Users_Groups.groupId = Group_.groupId)
			WHERE
				(Users_Groups.groupId IN
					(
						SELECT
							Users_Groups.groupId
						FROM
							Users_Groups [$USERS_GROUPS_JOIN$]
						WHERE
							(userId = ?) [$USERS_GROUPS_WHERE$]
					)
				)
				AND	(User_.userId != ?)
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Search all users and attaches groups to them -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.searchBySitesGroups">
        <![CDATA[
			SELECT DISTINCT
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			INNER JOIN
				Users_Groups ON (Users_Groups.userId = User_.userId)
			INNER JOIN
			    Group_ ON (Users_Groups.groupId = Group_.groupId)
			WHERE
				(Users_Groups.groupId IN
					(
						SELECT
							Users_Groups.groupId
						FROM
							Users_Groups [$USERS_GROUPS_JOIN$]
						WHERE
							(userId = ?) [$USERS_GROUPS_WHERE$]
					)
				)
				AND	(User_.userId != ?)
				AND
				(
					(lower(User_.firstName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.middleName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.lastName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.screenName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.emailAddress) LIKE ? [$AND_OR_NULL_CHECK$])
				)
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Finds all users and attaches social relation types to them -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.findBySocialGroups">
        <![CDATA[
			SELECT DISTINCT
			    SocialRelation.type_ AS relationType,
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			INNER JOIN
				SocialRelation ON (SocialRelation.userId2 = User_.userId)
			WHERE
				(SocialRelation.userId1 = ?)
				AND [$SOCIAL_RELATION_TYPES$]
				AND (User_.userId != ?)
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Search all users and attaches social relation types to them -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.searchBySocialGroups">
        <![CDATA[
			SELECT DISTINCT
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			INNER JOIN
				SocialRelation ON (SocialRelation.userId2 = User_.userId)
			WHERE
				(SocialRelation.userId1 = ?)
				AND [$SOCIAL_RELATION_TYPES$]
				AND (User_.userId != ?)
				AND
				(
					(lower(User_.firstName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.middleName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.lastName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.screenName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.emailAddress) LIKE ? [$AND_OR_NULL_CHECK$])
				)
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Finds all users and attaches groups to them -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.findByUserGroups">
        <![CDATA[
			SELECT DISTINCT
			    UserGroup.name AS groupName,
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			INNER JOIN
				Users_UserGroups ON (Users_UserGroups.userId = User_.userId)
			INNER JOIN
			    UserGroup ON (Users_UserGroups.userGroupId = UserGroup.userGroupId)
			WHERE
				(Users_UserGroups.userGroupId IN
					(
						SELECT
							Users_UserGroups.userGroupId
						FROM
							Users_UserGroups [$USERS_GROUPS_JOIN$]
						WHERE
							(Users_UserGroups.userId = ?) [$USERS_GROUPS_WHERE$]
					)
				)
				AND	(User_.userId != ?)
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Finds all users and attaches groups to them -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.SettingsFinder.searchByUserGroups">
        <![CDATA[
			SELECT DISTINCT
				User_.userId AS userId,
				User_.screenName AS screenName,
				User_.firstName AS firstName,
				User_.middleName AS middleName,
				User_.lastName AS lastName,
				Limsmuc_Settings.presence AS presence,
				Limsmuc_Settings.presenceUpdatedAt AS presenceUpdatedAt
			FROM
				Limsmuc_Settings
			INNER JOIN
				User_ ON (User_.userId = Limsmuc_Settings.userId)
			INNER JOIN
				Users_UserGroups ON (Users_UserGroups.userId = User_.userId)
			INNER JOIN
			    UserGroup ON (Users_UserGroups.userGroupId = UserGroup.userGroupId)
			WHERE
				(Users_UserGroups.userGroupId IN
					(
						SELECT
							Users_UserGroups.userGroupId
						FROM
							Users_UserGroups [$USERS_GROUPS_JOIN$]
						WHERE
							(Users_UserGroups.userId = ?) [$USERS_GROUPS_WHERE$]
					)
				)
				AND	(User_.userId != ?)
				AND
				(
					(lower(User_.firstName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.middleName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.lastName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.screenName) LIKE ? [$AND_OR_NULL_CHECK$]) [$AND_OR_CONNECTOR$]
					(lower(User_.emailAddress) LIKE ? [$AND_OR_NULL_CHECK$])
				)
				[$DEFAULT_USER$]
				[$DEACTIVATED_USER$]
			ORDER BY
				User_.firstName ASC,
				User_.middleName ASC,
				User_.lastName ASC
		]]>
    </sql>

    <!-- Finds all messages in the database related to the conversation and stopper -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.MessageFinder.findAllMessages">
        <![CDATA[
			SELECT
				Limsmuc_Message.mid AS mid,
				Limsmuc_Message.creatorId AS creatorId,
				Limsmuc_Message.createdAt AS createdAd,
				Limsmuc_Message.body AS body
			FROM
				Limsmuc_Message
			WHERE
				Limsmuc_Message.cid = ?
			ORDER BY
			    Limsmuc_Message.createdAt DESC
		]]>
    </sql>

    <!-- Counts all messages in the database related to the conversation and stopper -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.MessageFinder.countAllMessages">
        <![CDATA[
			SELECT
			    COUNT(Limsmuc_Message.mid) AS messageCount
			FROM
				Limsmuc_Message
			WHERE
				Limsmuc_Message.cid = ?
                [$STOPPER$]
		]]>
    </sql>

    <!-- Returns the oldest message in the conversation -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.MessageFinder.firstMessage">
        <![CDATA[
			SELECT
                Limsmuc_Message.mid AS mid,
                Limsmuc_Message.creatorId AS creatorId,
                Limsmuc_Message.createdAt AS createdAd,
                Limsmuc_Message.body AS body
            FROM
                Limsmuc_Message
            WHERE
                Limsmuc_Message.mid = (
                    SELECT
                        MIN(Limsmuc_Message.mid) AS firstMessage
                    FROM
                        Limsmuc_Message
                    WHERE
                        Limsmuc_Message.cid = ?
                )
		]]>
    </sql>

    <!-- Returns the oldest message in the conversation -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.MessageFinder.lastMessage">
        <![CDATA[
			SELECT
                Limsmuc_Message.mid AS mid,
                Limsmuc_Message.creatorId AS creatorId,
                Limsmuc_Message.createdAt AS createdAd,
                Limsmuc_Message.body AS body
            FROM
                Limsmuc_Message
            WHERE
                Limsmuc_Message.mid = (
                    SELECT
                        MAX(Limsmuc_Message.mid) AS lastMessage
                    FROM
                        Limsmuc_Message
                    WHERE
                        Limsmuc_Message.cid = ?
                )
		]]>
    </sql>

    <!-- Returns conversations where the user participates -->
    <sql id="com.marcelmika.lims.persistence.generated.service.persistence.ParticipantFinder.participatedConversations">
        <![CDATA[
            SELECT
                Limsmuc_Participant.pid pid,
                Limsmuc_Participant.cid cid,
                Limsmuc_Participant.participantId participantId,
                Limsmuc_Participant.unreadMessagesCount unreadMessagesCount,
                Limsmuc_Participant.isOpened isOpened,
                Limsmuc_Participant.openedAt openedAt
            FROM
                Limsmuc_Participant
            INNER JOIN
                Limsmuc_Conversation ON (Limsmuc_Conversation.cid = Limsmuc_Participant.cid)
            WHERE
                Limsmuc_Participant.participantId = ?
            ORDER BY
                Limsmuc_conversation.updatedAt DESC
		]]>
    </sql>

</custom-sql>